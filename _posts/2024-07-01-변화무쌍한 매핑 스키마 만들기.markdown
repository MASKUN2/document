---
layout: post
title:  "변화무쌍한 매핑맵 만들기"
date:   2024-00-00 00:00:00 +0900
categories: 
---

회사에서 일을 하면서 다음과 같은 과제가 생겼다.

특정 json 데이터가 외부로부터 전달된다. 이 json 데이터를 요구되는 구조에 맞추어 가공해야한다. 문제는 외부로 전달되는 데이터의 구조가 변할 수 있다는 것이다. 요구된 구조에서는 하나의 객체 안에 담길 내용이 여러 객체로 분산되어 전달되는 경우 이를 하나로 병합해야했다. 반대로 분할도 실시해야했다.프로퍼티의 값 또한 1차 정규화되지 않는 경우가 생길 수 있다. 예를 들어 시간을 담는 프로퍼티의 값에는 날짜, 날짜+시간, 시간이 올 수도 있다.

 나는 처음에는 모든 경우의 수를 커버링 할 수 있는 만능 dataMapper 을 설계 했으나 갈 수록 클래스가 비대해지고 잦은 변경사항의 추가로 유지보수가 어려웠다. 하나의 처리 시스템이 의존한 결과였다. 
 
 나는 대신에 데이터를 처리할 파이프라인을 만들기로 했다. 우선 입력 인터페이스를 통일화 했다. 외부에서 전달되는 json 데이터를 깊이레벨과 관계 없이 일괄적으로 평면화 시켰다. 그렇게 만들어 List<Map<String,String>> 형식으로 통일된 형식으로 받도록 클래스를 재설계했다.
 
변경된 데이터매퍼 클래스는 커스텀 Mapper 인터페이스를 상속한 클래스를 순서대로 담을 수 있는 List<Mapper>를 가지게 했다. 따라서 메소드가 무척 단순해졌다. 담겨져 있는 Mapper을 순서대로 실행하면되었다. 예를 들어 다음과 같다.

```java

public DataMapper{
    private List<Mapper> mappers;
    
    public List<Map<String,String>> doMap (List<Map<String,String>> maps){
        mappers.foreach(Mapper::map);
        return maps;
    }
}
```

Mapper의 설계는 무척 주의가 필요했다. 